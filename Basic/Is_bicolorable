#include<bits/stdc++.h>
using namespace std;

    const int n=1e5;
    int visited[n+1];
    int color[n+1];
    vector<int>adj_list[n];
    bool dfs(int node)
    {
        cout<<node<<" ";
        visited[node]=1;
        
    for(int adj_node:adj_list[node])
    {
        //assign a diffrent color
        if(visited[adj_node]==0)
        {
            if(color[adj_node]==1)
            {
                color[node]=2;
            }
            else
            {
                color[node]=1;
            }
            bool is_bicolorable=dfs(adj_node);
            if(!is_bicolorable)
            {
                return false;
            }
        }
        else
        {
            if(color[adj_node]==color[node])
            return false;
        }
    }
    return true;
}
int main()
{
    int node,edge;
    cin>>node>>edge;
    for(int i=0;i<edge;i++)
    {
        int u,v;
        cin>>u>>v;
        adj_list[u].push_back(v);
        adj_list[v].push_back(u);
    }
    bool is_bicolorable=true;
    for (int i=1;i<=node;i++)
    {
        if(visited[i]==0)
        {
            color[i]=1;
            bool ok=dfs(i);
            if(!ok)
            {
                is_bicolorable=false;
                break;
            }
        }
    }
    if(!is_bicolorable)
    {
        cout<<"IMPOSSIBLE";
    }
    else
    {
        for(int i=0;i<node;i++)
        {
            cout<<i<<" ";
        }
    }
    return 0;
}
