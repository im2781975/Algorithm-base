Implement Template based Stack using a static array. Make the array size 10.
Implement Template based Stack using a singly linked-list.
Implement Template based Stack using a dynamic array.
Implement a function “decrease_size()” in problem 3 which shrinks the size of the array when stack_size < array_cap/2. That is when stack_size < array_cap/2, you need to decrease the array_cap by half. 
Sort a stack using another temporary stack.
Reverse a stack using another temporary stack.


//-------------
Write a function ‘int getValue(index)’ -> This function will return the value present in the input index of a linked-list. You need to use a stl list. If the index is greater or equal to the size of the linked-list return -1.
Sample Input: [3, 2, 6, 4, 5], index: 2
Sample Output: 6
Write a function ‘bool search(value)’ -> This function will return true if the value is present in the linked-list, otherwise return false. You need to use a stl list.
Sample Input: [3, 2, 6, 4, 5], value : 4
Sample Output: true
Write a function void deleteZero()’ -> This function will delete all the elements that are equal to 0. You need to use a stl list.
Sample Input: [0, 2, 0, 0, 5]
Sample Output: [2, 5]
Write a program to check if a given bracket sequence is valid or not.

Sample Input
Sample Output
{[][]()(())}
Yes
{[][]()(()))}
No
{[](})
No


Write a program to convert an infix expression to a postfix expression.

Sample Input
Sample Output
a+b*c+d*e
abc*+de*+
a+b+c*d
ab+cd*+



