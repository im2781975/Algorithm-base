#include <bits/stdc++.h>
using namespace std;

class node
{
public:
    int data;
    node* nxt;
};

class Queue
{
public:
    int sz;
    node *head;
    node *tail;
    
    Queue() : sz(0), head(NULL), tail(NULL) {}

    node* create(int val)
    {
        node* newnode = new node;
        newnode->data = val;
        newnode->nxt = NULL;
        return newnode;
    }

    void enque(int val)
    {
        sz++;
        node* newnode = create(val);
        if (sz == 1)
        {
            head = tail = newnode;
            return;
        }
        else
        {
            tail->nxt = newnode;
            tail = newnode;
            return;
        }
    }

    void deque()
    {
        if (sz == 0)
        {
            cout << "Queue is empty" << endl;
        }
        else if (sz == 1)
        {
            delete head;
            head = tail = NULL;
            sz--;
        }
        else
        {
            node* a = head;
            head = head->nxt;
            sz--;
            delete a;
        }
    }

    int Front()
    {
        if (sz == 0)
        {
            return -1;
        }
        return head->data;
    }

    int size()
    {
        return sz;
    }
};

int main() {
    Queue myQueue;

    myQueue.enque(10);  // Enqueue 10
    myQueue.enque(20);  // Enqueue 20
    myQueue.enque(30);  // Enqueue 30

    cout << "Front element: " << myQueue.Front() << endl;  // Output: Front element: 10
    cout << "Queue size: " << myQueue.size() << endl;       // Output: Queue size: 3

    myQueue.deque();  // Dequeue the front element

    cout << "Front element: " << myQueue.Front() << endl;  // Output: Front element: 20
    cout << "Queue size: " << myQueue.size() << endl;       // Output: Queue size: 2

    return 0;
}

