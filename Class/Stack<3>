#include <iostream>
#include <vector>

template <typename T>
class DynamicArrayStack {
private:
    std::vector<T> stackArray;

public:
    void push(const T& value) {
        stackArray.push_back(value);
    }

    void pop() {
        if (!isEmpty()) {
            stackArray.pop_back();
        }
    }

    T top() {
        if (!isEmpty()) {
            return stackArray.back();
        }
        // Handle empty stack case appropriately, e.g., throw an exception.
    }

    bool isEmpty() {
        return stackArray.empty();
    }

    size_t size() {
        return stackArray.size();
    }
};

int main() {
    DynamicArrayStack<int> stack;
    
    stack.push(1);
    stack.push(2);
    stack.push(3);

    while (!stack.isEmpty()) {
        std::cout << "Top element: " << stack.top() << std::endl;
        stack.pop();
    }

    return 0;
}
